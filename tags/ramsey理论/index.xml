<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Ramsey理论 on Transcendence</title>
        <link>https://whzecomjm.github.io/tags/ramsey%E7%90%86%E8%AE%BA/</link>
        <description>Recent content in Ramsey理论 on Transcendence</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Mon, 18 May 2020 16:50:05 +0800</lastBuildDate><atom:link href="https://whzecomjm.github.io/tags/ramsey%E7%90%86%E8%AE%BA/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>拉姆齐数一个下界的概率证明</title>
        <link>https://whzecomjm.github.io/p/%E6%8B%89%E5%A7%86%E9%BD%90%E6%95%B0%E4%B8%80%E4%B8%AA%E4%B8%8B%E7%95%8C%E7%9A%84%E6%A6%82%E7%8E%87%E8%AF%81%E6%98%8E/</link>
        <pubDate>Mon, 18 May 2020 16:50:05 +0800</pubDate>
        
        <guid>https://whzecomjm.github.io/p/%E6%8B%89%E5%A7%86%E9%BD%90%E6%95%B0%E4%B8%80%E4%B8%AA%E4%B8%8B%E7%95%8C%E7%9A%84%E6%A6%82%E7%8E%87%E8%AF%81%E6%98%8E/</guid>
        <description>&lt;img src="https://whzecomjm.github.io/p/%E6%8B%89%E5%A7%86%E9%BD%90%E6%95%B0%E4%B8%80%E4%B8%AA%E4%B8%8B%E7%95%8C%E7%9A%84%E6%A6%82%E7%8E%87%E8%AF%81%E6%98%8E/greg-rosenke-TMXIWZncTZU-unsplash.jpg" alt="Featured image of post 拉姆齐数一个下界的概率证明" /&gt;&lt;p&gt;拉姆齐定理表明在二染色中对任意整数 $r$ 一定存在 $n$，使得完全图 $K_n$ 必然包含的同色子完全图$K_s$。&lt;/p&gt;
&lt;p&gt;$R(s):=R(s,s)$. 我们已经知道 $R(1)=1$, $R(2)=2$, $R(3)=6$, 以及 $R(4)=18$. 然后寻找确切的拉姆齐数十分困难, 事实上, $R(5)$ 及其以上的确切值仍然没有确定. 因此, 自然的想法就是不断缩小上下界. P. Erdös 在其1947年的文章中开创性的利用概率方法给出第一个下界.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Theorem&lt;/strong&gt; [3]. The Ramsey number $R(s)$ is bigger than $2^{(s-1)/2}$.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;该定理的证明是概率性而非构造性证明。我们选择 $K_n$ 边的一个随机着色。然后我们将得到一个同色完全图$K_s$的概率的一个上界。我们将证明如果我们非常小心地选取 $n$，我们可以令这个概率（严格）小于1。如果这个概率小于1，则必然存在某些着色方式使得不存在同色的 $K_s$。&lt;/p&gt;
&lt;p&gt;那么如何选择一个随机着色呢？我们将 $K_n$ 的每条边染为红色或者蓝色，每次染色都是独立事件，且任意一次染色两种颜色的概率为1/2。那么我们得到一个同色的完全图 $K_s$ 的概率如何？利用简单粗暴的估计，我们知道这等于所有使得 $K_s$ 是同色的概率的和。我们可以通过计算 $K_s$ 的所有数量乘以每一个 $K_s$ 是同色的概率。&lt;/p&gt;
&lt;p&gt;$K_s$ 的数量显而易见是 $n \choose s$. 那么每一个 $K_s$ 同色的概率为多少？我们知道每条边为红色概率是 1/2，$K_s$ 有 $s\choose 2$ 个边。因此，$K_s$ 是红色的概率是 $2^{-{s\choose 2}}$，因此这个 $K_s$ 同色的概率为 $2^{1-{s\choose 2}}=2\times 2^{-{s\choose 2}}$。&lt;/p&gt;
&lt;p&gt;因此，$K_s$ 同色的概率是 ${n\choose s} 2^{1-{s\choose 2}}$. 我们想选择足够大的 n，使得这一概率小于1。如果我们选择 $n=\lfloor{2^{(s-1)/2}}\rfloor$，则我们得到&lt;/p&gt;
&lt;p&gt;$$
2^{1-{s\choose 2}}{n\choose s}\leq 2^{1-{s\choose 2}}\frac{n^s}{s!} &amp;lt; 2^{-s(s-1)/2}2^{s(s-1)/2}=1.
$$&lt;/p&gt;
&lt;p&gt;这正是我们想要的结果。注意到在 Erdos 最初的证明中，他使用的是计数而非概率，而现在概率是现代的语言。&lt;/p&gt;
&lt;h3 id=&#34;references&#34;&gt;References&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Wikipedia, &lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/Ramsey%27s_theorem#Ramsey_numbers&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Ramsey Number&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Michael Krivelevich, &lt;em&gt;Topics in Random Graphs&lt;/em&gt;, 1.6.1 pp. 8-9, 2010.&lt;/li&gt;
&lt;li&gt;P. Erdös, &lt;strong&gt;Some remarks on the theory of graphs&lt;/strong&gt;, Bull. Amer. Math. Soc. &lt;strong&gt;53&lt;/strong&gt; (1947), &lt;a class=&#34;link&#34; href=&#34;https://www.ams.org/journals/bull/1947-53-04/S0002-9904-1947-08785-1/home.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;292-294&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Theorem of the week, &lt;a class=&#34;link&#34; href=&#34;https://theoremoftheweek.wordpress.com/2010/05/02/theorem-25-erdoss-lower-bound-for-the-ramsey-numbers/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Theorem 25: Erdős’s lower bound for the Ramsey numbers&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>方程的染色问题</title>
        <link>https://whzecomjm.github.io/p/%E6%96%B9%E7%A8%8B%E7%9A%84%E6%9F%93%E8%89%B2%E9%97%AE%E9%A2%98/</link>
        <pubDate>Tue, 20 Aug 2019 22:48:12 +0800</pubDate>
        
        <guid>https://whzecomjm.github.io/p/%E6%96%B9%E7%A8%8B%E7%9A%84%E6%9F%93%E8%89%B2%E9%97%AE%E9%A2%98/</guid>
        <description>&lt;img src="https://whzecomjm.github.io/p/%E6%96%B9%E7%A8%8B%E7%9A%84%E6%9F%93%E8%89%B2%E9%97%AE%E9%A2%98/pawel-czerwinski-nyJY9UZnkrE-unsplash.jpg" alt="Featured image of post 方程的染色问题" /&gt;&lt;p&gt;本文翻译节选自我的一个笔记，为了偷懒，一些定义和证明就保持原样了。&lt;/p&gt;
&lt;p&gt;染色问题最著名的理论是&lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/Ramsey_theory&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;拉姆齐理论&lt;/a&gt;，它描述的是对有限整数集合或者所有自然数的任意染色下局部拥有的单色性。这一定理可以推广到可数甚至与一些大基数（large cardinals）。关于无限的拉姆齐理论可以参考这个 &lt;a class=&#34;link&#34; href=&#34;https://cs.stanford.edu/people/jbaek/infinite-ramsey.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Notes&lt;/a&gt;。至于满足单色性的局部性质，拉姆齐定理并没有给出这些性质的具体形式。然而， Van der Waerden 定理和 Hales–Jewett 定理等结论给出了一些具体的形式，比如前者是等差数列总有单色解，后者更是前者的推广。另一个有意思的局部性质是“单色方程解”，满足这一特性的方程我们称为“分割正规的”（partition regular）。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Definition 1&lt;/strong&gt;. An equation $f(x,y,z,\dots)=0$ is &lt;em&gt;partition regular&lt;/em&gt; (or simply &lt;em&gt;regular&lt;/em&gt;) if, and only if, for any finite partition of  $\mathbb{N}$ into $C_1, C_1,\dots, C_r$, there exists some $C_i$ containing a non-trivial solution to the equation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Schur 最早研究了分割正规的Schur方程，也就是最简单的线性齐次方程 $x+y=z$。Schur定理表明，对自然数的任意有限染色，上述方程都有单色解。为了更好的理解，我们考虑二染色，用反证法可以证明在二染色情况下，总存在单色解。&lt;/p&gt;
&lt;p&gt;实际上，对于二染色的情况，我们只需要考察前5个数即可。不妨假设1被染成蓝色，因为 1+1=2 ，所以2只能被染成红色，同理4只能被染为蓝色。而1+3=4则表明 3 只能被染为红色。因此 ${1,2,3,4}$ 被唯一（不考虑特定颜色）分割为两个单色子集  ${1,4}$ 和 ${2,3}$ 。而 5=2+3=1+4 导致必然有一个单色解（5要么是蓝色要么是红色）。在这一情况下，我们称 5 为方程 x+y=z 的 Schur 数 $S(2)$ 。上述“证明”也表明Schur方程是 &lt;strong&gt;2-regular&lt;/strong&gt; 的。更一般地，对任意的方程或者方程组，我们定义 Rado 数如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Definition 2&lt;/strong&gt;. Given an equation or a system of equations $\mathcal{L}$ and finite $r$ colors, the &lt;em&gt;Rado number&lt;/em&gt; $R(\mathcal{L},r)$ is the least number such that any $r$-coloring of ${1,2,\dots,R(\mathcal{L},r)}$ must contain a monochromatic solution to $\mathcal{ L}$.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;对于一般的线性齐次方程 $a_1 x_1+\cdots+a_nx_n=0$ , Schur 的学生 Rado 给出了线性齐次方程是否是分割正规的充分必要条件：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Theorem 3&lt;/strong&gt; (Rado&amp;rsquo;s Theorem [1]).  A linear homogeneous equation $a_1 x_1+\cdots+a_nx_n=0$ is partition regular on $\mathbb{N}$ if and only if there exists a nonempty set $J\subseteq{1,\dots,n}$ such that $\sum_{j\in J}a_j=0$.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;上述定理也有乘积形式的非线性方程的定理。对于不是分割正规的方程，我们也会考察一个弱化的条件，即上文提到的 r-regular，r 染色的分割正规性。进一步地，我们有&lt;strong&gt;正规次数&lt;/strong&gt;的定义&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Definition 4&lt;/strong&gt;. The &lt;em&gt;degree of regularity&lt;/em&gt; of an equation or a system of equations $\mathcal{L}$ is the largest integer $r\geq 0$, if any, such that $\mathcal{L}$ is $r$-regular. This number is denoted by $\mathrm{dor}(\mathcal{L})$. In particular, if $\mathrm{dor}(\mathcal{L})=\infty$, then $\mathcal{L}$ is regular.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;让我们回到 Schur 方程，我们可以手工计算得到 $S(3)=14$。Golomb 和 Baumert [2] 证明了 $S(4)=45$。至于 S(5)，悬而未决了多年，直到最近，Heule [3] 才使用计算机方法 SAT solver 证明了 $S(5)=161$。而 $S(r);(r\geq6)$ 到目前为止还是未解的。&lt;/p&gt;
&lt;p&gt;在方程的正规性这一领域中的最著名的问题是 Erdos 和 Graham 提出的勾股方程的正规性，这一问题目前仍然是未解的，甚至对于特定的 r， r-正规性也长期没有任何突破。直到2016年，Heule, Kullmann 和 Marik [4] 使用 SAT solver 反向树的方法证明了
$$
R(x^2+y^2=z^2,2)=7825
$$
这一证明被称为“世界上最长的证明”，有 200 TB 证明数据。当时有大量媒体报道这一证明，其中每日邮报当时报道的标题是：“World&amp;rsquo;s longest maths proof: Solution to a 30-year-old problem would take 10 BILLION years to read—all for a prize of just $100.”但实际上，他们还不能获得这一100美元奖金。因为悬赏100美元的问题是完整解决勾股方程的正规性，而他们的工作仅仅只是解决这一问题的一小步。&lt;/p&gt;
&lt;p&gt;而在方程正规性的理论证明中，Nasso 和 Baglini [5] 给出了最好的结果。他们给出了一系列满足分割正规性的方程的充分条件和必要条件。比如，他们证明了扩展的Rado多项式：&lt;/p&gt;
&lt;p&gt;$$
R(x_1,\dots,x_n,y_1,\dots,y_k)=c_1x_1+\cdots+c_nx_n+P(y_1,\dots,y_k)
$$
（n≥2，P是&lt;strong&gt;没有常数项&lt;/strong&gt;的整系数多项式）在N上是正规的当且仅当存在非空子集 $J\subseteq {1,\dots,n}$ 使得 $\sum_{j\in J}c_j=0$。不仅仅如此，诸如 $x_1x_2=y_1y_2+z^2$ 等大量方程也能被证明是正规的。&lt;/p&gt;
&lt;p&gt;不幸的是，Nasso 和 Baglini 的理论还是无法判断勾股方程的分割正规性。它是2-正规的依然是目前我们知道的最好的结果。&lt;/p&gt;
&lt;p&gt;不过让我们来看一些其他的例子，比如 $x+y=z^2$ 。根据Nasso 和 Baglini 的理论，这一方程不是正规的。但是对于不正规的方程我们乐于考察他们的正规次数。 Lindqvist [6] 最近证明了它的正规次数是2， 即它是2-正规但不是3-正规的。需要注意的是，这一方程有一个平凡解（x=y=z=2），我们讨论的单色解都排除这样的情况。Lindqvist 对于这一方程的非3-正规的构造性证明仅有十几行，而对2-正规（更严格地说，他证明了2-强正规，即对任意有限染色有无穷多对单色解）的证明则用到了解析数论等多种工具，花了近30多页。&lt;/p&gt;
&lt;p&gt;实际上，仅仅是考察2-正规性，我们也可以通过穷举得到
$$
R(x+y=z^2,2)=32
$$
并且能构造31以内自然数的一个无同色解的分割：&lt;/p&gt;
&lt;p&gt;$$
C_R={1,4,5,6,7};\\
C_B={2,3,8,9,10,11,12,15,18,19,20,21,24,29,30,31}.
$$&lt;/p&gt;
&lt;p&gt;让我们用上述方法讨论一下如下方程： $x+y=2z^2$ 。这一方程同样不是正规的，且是非3-正规，我们通过略微修改Lindqvist的证明既可证明非3-正规性。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;证明&lt;/strong&gt;.  We color all the points in each dyadic block $A_i={n\in \mathbb{N}:2^i\leq n &amp;lt;2^{i+1}},$ $i=0,1,2,\dots$, in one color $c_i$. We assign $c_0,c_1,c_2$ to be different and let $c_i\notin{c_{\lfloor{i/2}\rfloor-1},c_{\lfloor {i/2}\rfloor}}$, for all $i\geq 3$. This is possible, since $\lfloor{i/2}\rfloor\leq i$ for all $i\geq 3$ (actually for all $i\geq 0$). Without loss of generality, suppose $x\leq y, y\in A_i$, then we have $2^i&amp;lt;x+y&amp;lt; 2^{i+2}$, hence $2^{(i-1)/2}&amp;lt;z&amp;lt;2^{(i+1)/2}$. Since $\frac{i-1}{2}\geq \lfloor\frac{i}{2}\rfloor-1$ and $(i+1)/2\leq \lfloor\frac{i}{2}\rfloor+1$, it follows that $z\in A_{\lfloor{i/2}\rfloor-1}\cup A_{\lfloor{i/2}\rfloor}$. By construction, the only way that such a $z$ can have the same color as $y$ is if $i \in {0,1,2}$, in which case $x\leq y&amp;lt;8$, and so $z=1$ or $2$. If $z=1$, then this is the trivial solution $x=y=z=1$. If $z=2$, then $x+y=8=2\cdot 2^2$. Here are all the possible options {1,7,2}, {2,6,2}, {3,5,2} and {4,4,2}. It is easy to check that there is no monochromatic solution in those options.&lt;/p&gt;
&lt;p&gt;接下来我们可以使用穷举法考察 2-正规性。然而过程没有那么顺利，通过简单的枚举我们可以得到有如下的同色子集 ${3,4,5,6}$。于是我试图使用 SAT solver。SAT solver 是一个“逻辑计算器”，我们需要把我们的问题（在正规性检测中我们需要输入反问题）转化为合取范式的问题才能放入 SAT solver。感兴趣的可以去了解一下 SAT，这里就不详述了。虽然有很多现成的 SAT solver，但是为了方便我还是找到了一个现成的在线的 SAT solver &lt;a class=&#34;link&#34; href=&#34;https://www.comp.nus.edu.sg/~gregory/sat/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SAT.js&lt;/a&gt;. 由于不知道这一问题的 Rado 数的大小，我先尝试了 100。结果发现，仅仅当z≤9时，我们就能得出矛盾，也就是说 Rado数必然比100小。用二分法穷举以后，我得到&lt;/p&gt;
&lt;p&gt;$$
R(x+y=2z^2,2)=93.
$$
下面附上生成 cpf 的python 代码（几年没写过代码）和结果：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;94&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# then 93&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# get the number of clauses for any n&amp;lt;100.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;clauses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# print the head of the cpf file.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;p cnf&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clauses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# print contents of the cpf file&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# for n&amp;lt;100, 1 &amp;lt; z &amp;lt;10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# get rid of symmetric solutions of x and y&amp;#39;s &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# all solutions with x, y less than n&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# the condition of no blue monochromatic&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# the condition of no red monochromatic&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://pic4.zhimg.com/v2-2bbe022f89eea5de79dd272c577f05b7_b.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic1.zhimg.com/v2-c1d6dbcc7b93e30702904f8ea1721530_b.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;References&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;[1] R. Rado, Studien zur Kombinatorik, &lt;em&gt;Math. Z.&lt;/em&gt; 36 (1933), 242–280.&lt;br&gt;
[2] S. W. Golomb and L. D. Baumert. &amp;ldquo;Backtrack programming.&amp;rdquo; &lt;em&gt;Journal of the ACM (JACM)&lt;/em&gt; 12.4 (1965): 516-524.&lt;br&gt;
[3] M. Heule, Schur number five. &lt;em&gt;Thirty-Second AAAI Conference on Artificial Intelligence&lt;/em&gt;. 2018.&lt;br&gt;
[4] M. Heule, O. Kullmann, and V. Marek, Solving and verifying the boolean Pythagorean triples problem via cube-and-conquer. &lt;em&gt;International Conference on Theory and Applications of Satisfiability Testing&lt;/em&gt;. Springer, Cham, 2016.&lt;br&gt;
[5] M. Nasso and L. Baglini. Ramsey properties of nonlinear Diophantine equations. &lt;em&gt;Advances in Mathematics&lt;/em&gt; 324 (2018): 84-117.&lt;br&gt;
[6] B. Green and S. Lindqvist. Monochromatic Solutions to x+y=z2. &lt;em&gt;Canadian Journal of Mathematics&lt;/em&gt; 71.3 (2019): 579-605.&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
